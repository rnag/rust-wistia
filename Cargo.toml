[package]
name = "rust-wistia"
version = "0.3.0"
authors = ["Ritvik Nag <rv.kvetch@gmail.com>"]
description = "A rust crate wrapping Wistia's Data and Upload API into a simple easy to use interface"
documentation = "https://docs.rs/rust-wistia/"
repository = "https://github.com/rnag/rust-wistia"
readme = "README.md"
keywords = ["wistia", "media", "api", "client", "upload-api"]
categories = ["api-bindings", "multimedia::video"]
license = "MIT"
edition = "2021"
exclude = ["examples/assets"]

# See here for more info: https://blog.rust-lang.org/2020/03/15/docs-rs-opt-into-fewer-targets.html

[package.metadata.docs.rs]
all-features = true
targets = ["x86_64-unknown-linux-gnu"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
hyper = { version = "0.14.16", default-features = false, features = ["client"] }
serde = { version = "1.0.136", features = ["derive"] }
serde_json = { version = "1.0.78", default-features = false }
thiserror = { version = "1.0.30" }  # To easily generate library errors

# Optional

log = { version = "0.4.14", optional = true }
serde_urlencoded = { version = "0.7.1", optional = true }
hyper-multipart-rfc7578 = { version = "0.5.1", optional = true }
hyper-rustls = { version = "0.23.0", optional = true, default-features = false, features = ["native-tokio", "tls12"] }
rustls = { version = "0.20.1", optional = true, default-features = false }
hyper-tls = { version = "0.5.0", optional = true }

[dev-dependencies]

clap = { version = "^3.1", features = ["derive"] }
log = "^0.4"
sensible-env-logger = { version = "^0.2", features = ["local-time"] }
tokio = { version = "1.16.1", features = ["macros", "rt-multi-thread"] }
# Ensure package versions mentioned in the docs are up to date.
version-sync = "0.9.4"

### FEATURES #################################################################

[features]
default = ["upload-url", "rust-tls", "logging", "serde-std"]

# Enable upload of URL links to media files, via the `UrlUploader`
upload-url = ["serde_urlencoded"]

# Enable multi-part form upload of media files, via the `FileUploader`
upload-file = ["upload-url", "hyper-multipart-rfc7578"]

# The `rust-tls` feature here is ideal for Linux (AWS Lambda) environments.
# NOTE: Disabling both `rust-tls` *and* `native-tls` features is not supported.
rust-tls = ["hyper-rustls/http1", "hyper-rustls/http2", "hyper-rustls", "rustls"]

# This feature enables useful log output from this library, such as request
# URL and logging of elapsed durations; it is enabled by default.
logging = ["log"]

# Use the Rust standard library with `serde_json` (default)
serde-std = ["serde_json/std"]

# Use the native TLS implementation using OpenSSL instead
native-tls = ["http1", "hyper-tls"]

# Enable HTTP/1 or HTTP/2 support via hyper. These features generally
# shouldn't be needed to be enabled individually.
http1 = ["hyper/http1"]
http2 = ["hyper/http2"]

# This can be enabled to receive more verbose log output from `hyper-rustls`
rust-tls-logging = ["hyper-rustls/logging"]

# Available on Rust 1.36+.
# See https://github.com/serde-rs/json#no-std-support
serde-alloc = ["serde_json/alloc"]

[[example]]
name = "upload_file"
required-features = ["upload-file"]

[[example]]
name = "upload_url"
required-features = ["upload-url"]
